import{_ as e,c as a,o as i,a3 as t}from"./chunks/framework.Bsyxd66g.js";const u=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/install.md","filePath":"guide/install.md","lastUpdated":1721116125000}'),s={name:"guide/install.md"},l=t('<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.1.x 编写</p></div><h2 id="第三方工具" tabindex="-1">第三方工具 <a class="header-anchor" href="#第三方工具" aria-label="Permalink to &quot;第三方工具&quot;">​</a></h2><p>一些社区开发的安装工具来帮助你快速安装，或跳过此条目来阅读官方安装教程</p><ul><li><a href="https://github.com/Mzdyl/LiteLoaderQQNT_Install/" target="_blank" rel="noreferrer">https://github.com/Mzdyl/LiteLoaderQQNT_Install/</a></li></ul><h2 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h2><p>你需要先下载 LiteLoaderQQNT 到任意位置，以下有两种方式</p><ul><li><p><strong>通过 Release</strong></p><p>前往 LiteLoaderQQNT 仓库，在 Release 中 Latest 内，下载 <code>LiteLoaderQQNT.zip</code> 文件，将压缩包内 LiteLoaderQQNT 目录解压到任意位置</p><p>LiteLoaderQQNT：<a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT" target="_blank" rel="noreferrer">https://github.com/LiteLoaderQQNT/LiteLoaderQQNT</a></p></li><li><p><strong>通过 Clone</strong></p><p>使用 Git 工具将 LiteLoaderQQNT 仓库 Clone 到本地任意位置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LiteLoaderQQNT/LiteLoaderQQNT.git</span></span></code></pre></div></li></ul><h2 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>找到 QQNT 安装目录，编辑 <code>resources\\app\\app_launcher\\index.js</code> 文件，在最前端插入一行<code>require(String.raw`此处为你 LiteLoaderQQNT 目录路径`);</code></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iteloaderQQNT`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 此处换成你 LiteLoaderQQNT 目录位置</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./launcher.node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;external_index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p>请确保拥有 QQNT 安装目录的读写权限！如果不想给予 QQNT 安装目录读写权限</p><ul><li>按照下文 <code>存储位置</code> 一节进行设置</li><li>将 <code>LiteLoaderQQNT/src/preload.js</code> 复制到 <code>QQNT/resources/app/versions/此处为版本号/application/preload.js</code></li></ul><p>LiteLoaderQQNT 会在第二步骤的文件不一致或没有文件时自动复制，也就是说在更新本体后需再进行一次这步骤</p></div><h2 id="修补" tabindex="-1">修补 <a class="header-anchor" href="#修补" aria-label="Permalink to &quot;修补&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此条目仅需 Windows 用户查看，其他系统无需继续阅读此条目</p></div><p>由于 Windows 系统平台 QQNT 被添加文件完整性验证，你需要额外步骤来解除限制,有下列四种方式：</p><ul><li><p><strong>DLLHijackMethod</strong></p><p>在 Release 下载 dll 文件，重命名为 dbghelp.dll 放入 QQ.exe 同级目录下即可<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod" target="_blank" rel="noreferrer">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/tree/DLLHijackMethod</a></p></li><li><p><strong>QQNTFileVerifyPatch</strong></p><p>在 Release 下载 exe 文件，运行将弹出文件选择框，进入 QQNT 安装目录选择 QQ.exe 开始修补，每次更新都需要重新修补<br><a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch" target="_blank" rel="noreferrer">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch</a></p></li><li><p><strong>PatcherNFixer</strong></p><p>在 Release 下载 zip 文件，解压后运行 exe 将弹出图形化界面，根据软件界面提示选择相应选项与修补方式，每次更新都需要重新修补<br><a href="https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer" target="_blank" rel="noreferrer">https://github.com/xh321/LiteLoaderQQNT-PatcherNFixer</a></p></li><li><p><strong>V8Killer</strong></p><p>此方式目前过于麻烦，且需要自行寻找对应的 RVA 偏移量，只说明此方式的可行性，需自行探索使用方式<br><a href="https://github.com/ShellWen/v8_killer" target="_blank" rel="noreferrer">https://github.com/ShellWen/v8_killer</a></p></li></ul><h2 id="检查" tabindex="-1">检查 <a class="header-anchor" href="#检查" aria-label="Permalink to &quot;检查&quot;">​</a></h2><p>按照上述教程完成安装后，有两种方法检查 LiteLoaderQQNT 是否成功安装</p><ul><li>运行 QQNT 并打开设置，查看左侧列表是否出现 <code>LiteLoaderQQNT</code> 选项</li><li>使用终端运行 QQNT 查看是否有 LiteLoaderQQNT 相关内容输出显示</li></ul><p>如果有显示，即安装成功，玩的开心！</p><h2 id="存储目录" tabindex="-1">存储目录 <a class="header-anchor" href="#存储目录" aria-label="Permalink to &quot;存储目录&quot;">​</a></h2><p>支持设置 <code>LITELOADERQQNT_PROFILE</code> 环境变量指定 <code>data</code> <code>plugins</code> 存储位置，即可不在本体目录进行读写操作，比如 MacOS 与 Linux 平台 QQNT，以及类似于 flatpak 打包的 QQNT，让其实现成为可能</p><p>如果你想将本体与存储目录合并在一起（便携软件）需将 <code>LITELOADERQQNT_PROFILE</code> 环境变量删除，将 <code>data</code> <code>plugins</code> 移动回本体根目录下</p><h2 id="更新qqnt" tabindex="-1">更新QQNT <a class="header-anchor" href="#更新qqnt" aria-label="Permalink to &quot;更新QQNT&quot;">​</a></h2><p>每次更新 QQNT 都需要重新根据上述教程重新修补</p><h2 id="卸载" tabindex="-1">卸载 <a class="header-anchor" href="#卸载" aria-label="Permalink to &quot;卸载&quot;">​</a></h2><p>其实非常简单，根据上述安装教程的操作将修改还原即可</p><ul><li>删除 <code>resources\\app\\app_launcher\\index.js</code> 添加的内容</li><li>删除 <code>LITELOADERQQNT_PROFILE</code> 环境变量以及指定的目录</li><li>删除 <code>QQNT/resources/app/versions/此处为版本号/application</code> 目录</li><li>删除 <code>LiteLoaderQQNT</code> 本体目录</li><li>使用修补工具还需参照修补工具的教程</li></ul>',28),r=[l];function o(h,p,d,n,c,Q){return i(),a("div",null,r)}const g=e(s,[["render",o]]);export{u as __pageData,g as default};
