import{_ as a,c as o,a2 as t,o as c}from"./chunks/framework.Dtz5kk4D.js";const m=JSON.parse('{"title":"自定义协议方案","description":"","frontmatter":{},"headers":[],"relativePath":"docs/protocol-scheme.md","filePath":"docs/protocol-scheme.md","lastUpdated":1753260816000}'),r={name:"docs/protocol-scheme.md"};function l(d,e,s,i,n,h){return c(),o("div",null,e[0]||(e[0]=[t('<h1 id="自定义协议方案" tabindex="-1">自定义协议方案 <a class="header-anchor" href="#自定义协议方案" aria-label="Permalink to &quot;自定义协议方案&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.2.4 编写<br> 目前版本暂时仅支持 Windows 64 位，需搭配频道内未公开的 dbghelp.dll 方可使用</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>一些自定义的 URL 协议方案，方便插件开发</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><h3 id="local" tabindex="-1">local <a class="header-anchor" href="#local" aria-label="Permalink to &quot;local&quot;">​</a></h3><p><code>file</code> 协议的代替方案，读取本地文件，使用绝对路径<br><code>host</code> 可填写 <code>root</code> <code>profile</code> 到目录下拼接路径</p>',7)]))}const u=a(r,[["render",l]]);export{m as __pageData,u as default};
