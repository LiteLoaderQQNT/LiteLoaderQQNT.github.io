import{_ as a,c as o,o as r,ah as c}from"./chunks/framework.Crdh1p6x.js";const _=JSON.parse('{"title":"自定义协议方案","description":"","frontmatter":{},"headers":[],"relativePath":"docs/protocol-scheme.md","filePath":"docs/protocol-scheme.md","lastUpdated":1755922316000}'),t={name:"docs/protocol-scheme.md"};function l(d,e,s,i,h,n){return r(),o("div",null,[...e[0]||(e[0]=[c('<h1 id="自定义协议方案" tabindex="-1">自定义协议方案 <a class="header-anchor" href="#自定义协议方案" aria-label="Permalink to “自定义协议方案”">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to “介绍”">​</a></h2><p>一些自定义的 URL 协议方案，方便插件开发</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to “用法”">​</a></h2><h3 id="local" tabindex="-1">local <a class="header-anchor" href="#local" aria-label="Permalink to “local”">​</a></h3><p><code>file</code> 协议的代替方案，读取本地文件，使用绝对路径<br><code>host</code> 可填写 <code>root</code> <code>profile</code> 到目录下拼接路径</p>',6)])])}const m=a(t,[["render",l]]);export{_ as __pageData,m as default};
