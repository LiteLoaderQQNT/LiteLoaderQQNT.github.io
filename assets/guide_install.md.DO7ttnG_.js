import{_ as a,c as i,o as t,ah as s}from"./chunks/framework.Crdh1p6x.js";const g=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/install.md","filePath":"guide/install.md","lastUpdated":1757170873000}'),l={name:"guide/install.md"};function r(o,e,d,n,h,p){return t(),i("div",null,[...e[0]||(e[0]=[s('<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to “安装”">​</a></h1><h2 id="使用来自社区的自动化安装工具" tabindex="-1">使用来自社区的自动化安装工具 <a class="header-anchor" href="#使用来自社区的自动化安装工具" aria-label="Permalink to “使用来自社区的自动化安装工具”">​</a></h2><p>通过本段提供的方案完成安装后，直接跳到 <a href="#检查是否安装成功">6. 检查是否安装成功</a> 即可。</p><p>如果需要手动进行安装，请从 <a href="#下载-liteloaderqqnt-本体">2. 下载 LiteLoaderQQNT 本体</a> 开始。</p><h3 id="通过安装工具进行安装" tabindex="-1">通过安装工具进行安装 <a class="header-anchor" href="#通过安装工具进行安装" aria-label="Permalink to “通过安装工具进行安装”">​</a></h3><div class="warning custom-block"><p class="custom-block-title">警告</p><p>在 Windows 上使用这些工具时，请做好 QQNT 无法通过文件校验的准备。</p><p>在遇到这种情况时，仍推荐阅读 <a href="#在-windows-上绕过-qqnt-文件校验">3. 在 Windows 上绕过 QQNT 文件校验</a>。</p></div><ul><li><p><a href="https://github.com/Mzdyl/LiteLoaderQQNT_Install" target="_blank" rel="noreferrer">https://github.com/Mzdyl/LiteLoaderQQNT_Install</a></p><p>使用 Python 编写的安装脚本，支持 Windows / Linux / MacOS。</p></li><li><p><a href="https://github.com/NapNeko/NapCat-Windows-Boot" target="_blank" rel="noreferrer">https://github.com/NapNeko/NapCat-Windows-Boot</a></p><p>来自 NapCat 项目的启动器，可以一键启动，支持 Windows</p></li></ul><h3 id="通过-aur-安装-arch-linux" tabindex="-1">通过 AUR 安装 （Arch Linux） <a class="header-anchor" href="#通过-aur-安装-arch-linux" aria-label="Permalink to “通过 AUR 安装 （Arch Linux）”">​</a></h3><ul><li><a href="https://aur.archlinux.org/packages/liteloader-qqnt-bin" target="_blank" rel="noreferrer">https://aur.archlinux.org/packages/liteloader-qqnt-bin</a> 对应 Release 版本</li><li><a href="https://aur.archlinux.org/packages/liteloader-qqnt-git" target="_blank" rel="noreferrer">https://aur.archlinux.org/packages/liteloader-qqnt-git</a> 对应仓库最新提交</li></ul><p>在卸载 <code>liteloader-qqnt</code> 时，推荐重新安装 QQNT 本体，以防止文件哈希不同于原版。</p><p>推荐阅读 <a href="#更改插件数据目录-可选">5. 更改插件数据目录</a> ，以防止 LiteLoaderQQNT 试图在无权限目录下执行写操作。</p><h2 id="下载-liteloaderqqnt-本体" tabindex="-1">下载 LiteLoaderQQNT 本体 <a class="header-anchor" href="#下载-liteloaderqqnt-本体" aria-label="Permalink to “下载 LiteLoaderQQNT 本体”">​</a></h2><p>你需要先下载 LiteLoaderQQNT 到任意位置，以下有两种方式</p><ul><li><p><strong>Release</strong> （稳定版） 前往 <a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT/releases/latest" target="_blank" rel="noreferrer">LiteLoaderQQNT Release 页</a>，下载 <code>LiteLoaderQQNT.zip</code> 文件解压到任意位置</p></li><li><p><strong>Clone</strong> （最新提交） 使用 Git 工具将 LiteLoaderQQNT 仓库 Clone 到本地任意位置</p></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LiteLoaderQQNT/LiteLoaderQQNT.git</span></span></code></pre></div><h2 id="在-windows-上绕过-qqnt-文件校验" tabindex="-1">在 Windows 上绕过 QQNT 文件校验 <a class="header-anchor" href="#在-windows-上绕过-qqnt-文件校验" aria-label="Permalink to “在 Windows 上绕过 QQNT 文件校验”">​</a></h2><p><s>原 <a href="https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/releases" target="_blank" rel="noreferrer">https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch/releases</a> 暂无公开发布计划，请使用 Telegram 群内的版本。</s></p><p>对于 Windows 系统用户，还需要绕过 QQNT 文件校验。</p><p>请根据你的操作系统架构在 Telegram 群内下载 <code>dbghelp_*.dll</code> 文件，将其重命名为 <code>dbghelp.dll</code> 后放入 <code>QQ.exe</code> 同级目录下。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>请确保您的 <strong>操作系统</strong>, <strong>QQNT</strong>, <strong>dbghelp.dll</strong> 文件均为同一架构 (ARM64 / x64)，否则可能出现怪异行为。</p></div><h2 id="手动修补-qqnt-中的必要文件" tabindex="-1">手动修补 QQNT 中的必要文件 <a class="header-anchor" href="#手动修补-qqnt-中的必要文件" aria-label="Permalink to “手动修补 QQNT 中的必要文件”">​</a></h2><ol><li><p>转到 QQNT 安装目录</p></li><li><p>查看 QQNT 安装目录，是否存在 <code>versions</code> 文件夹</p><ul><li>如果存在，则 <code>app</code> 路径为 <code>QQNT\\versions\\版本号\\resources\\app</code></li><li>否则 <code>app</code> 路径为 <code>QQNT\\resources\\app</code></li></ul></li><li><p>在 <code>app\\app_launcher</code> （若缺失 <code>app_launcher</code> 目录就自己创建）中创建一个 <code>LiteLoader.js</code> （文件名 <code>LiteLoader</code> 可随意设定， 需保留拓展名 <code>.js</code>）文件并写入以下内容：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`修改为 LiteLoaderQQNT 的绝对路径，保留反引号`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>修改 <code>app\\package.json</code> 文件，将 <code>main</code> 后值改为 <code>./app_launcher/LiteLoader.js</code>，其中 <code>LiteLoader</code> 可以改成你创建的文件名</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-   &quot;main&quot;: &quot;./application.asar/app_launcher/index.js&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   &quot;main&quot;: &quot;./app_launcher/LiteLoader.js&quot;,</span></span></code></pre></div></li></ol><h2 id="更改插件数据目录-可选" tabindex="-1">更改插件数据目录 （可选） <a class="header-anchor" href="#更改插件数据目录-可选" aria-label="Permalink to “更改插件数据目录 （可选）”">​</a></h2><p>支持设置 <code>LITELOADERQQNT_PROFILE</code> 环境变量指定 <code>data</code> <code>plugins</code> 存储位置，即可不在本体目录进行读写操作。当本体目录无写权限时（如 MacOS 与 Linux 平台 QQNT，以及类似于 flatpak 打包的 QQNT），请设定该变量到当前用户具有可读写权限的位置。</p><p>如果你想将本体与存储目录合并在一起需将 <code>LITELOADERQQNT_PROFILE</code> 环境变量删除，将 <code>data</code> <code>plugins</code> 移动回本体根目录下。</p><h2 id="检查是否安装成功" tabindex="-1">检查是否安装成功 <a class="header-anchor" href="#检查是否安装成功" aria-label="Permalink to “检查是否安装成功”">​</a></h2><p>按照上述教程完成安装后，有两种方法检查 LiteLoaderQQNT 是否成功安装</p><ul><li>运行 QQNT 并打开设置，查看左侧列表是否出现 <code>LiteLoaderQQNT</code> 选项</li><li>使用终端运行 QQNT 查看是否有 LiteLoaderQQNT 相关内容输出显示</li></ul><p>如果有显示，即安装成功，玩的开心！</p>',29)])])}const k=a(l,[["render",r]]);export{g as __pageData,k as default};
